name: kubectl-deploy
description: Custom action to deploy applications to Kubernetes
author: DevOps Team
version: "1.0.0"

parameters:
  - name: kubeconfig_path
    description: "Path to kubeconfig file"
    type: string
    default: "~/.kube/config"
  - name: namespace
    description: "Kubernetes namespace"
    type: string
    default: "default"
  - name: deployment_file
    description: "Kubernetes deployment file"
    type: string
    default: "deployment.yml"
  - name: wait_timeout
    description: "Timeout for waiting deployments (seconds)"
    type: string
    default: "300"
  - name: image_tag
    description: "Container image tag to use"
    type: string
    default: "latest"

requirements:
  - model: linux
    os: ubuntu
    memory: 1024

steps:
  - name: setup-kubectl
    script: |
      #!/bin/bash
      set -e
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      kubectl version --client

  - name: configure-kubectl
    script: |
      #!/bin/bash
      set -e
      export KUBECONFIG="{{.kubeconfig_path}}"
      kubectl cluster-info

  - name: deploy-application
    script: |
      #!/bin/bash
      set -e
      NAMESPACE="{{.namespace}}"
      DEPLOYMENT_FILE="{{.deployment_file}}"
      IMAGE_TAG="{{.image_tag}}"
      WAIT_TIMEOUT="{{.wait_timeout}}"

      kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      if [ "$IMAGE_TAG" != "latest" ]; then
        sed -i "s/:latest/:$IMAGE_TAG/g" $DEPLOYMENT_FILE
        sed -i "s/:v[0-9]\+\.[0-9]\+\.[0-9]\+/:$IMAGE_TAG/g" $DEPLOYMENT_FILE
      fi

      kubectl apply -f $DEPLOYMENT_FILE -n $NAMESPACE

      deployments=$(kubectl get deployments -n $NAMESPACE -o name)
      for deployment in $deployments; do
        echo "Waiting for $deployment to be ready..."
        kubectl wait --for=condition=available --timeout=${WAIT_TIMEOUT}s $deployment -n $NAMESPACE
      done

      kubectl get pods -n $NAMESPACE
      kubectl get services -n $NAMESPACE
